from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ContextTypes, ConversationHandler, MessageHandler, filters, CommandHandler
from database import save_user, save_message, create_support_ticket

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è ConversationHandler
MANAGER_DIALOG, REPORT_ISSUE, WAITING_MEDIA = range(3)

def create_main_menu():
    """–°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    keyboard = [
        [KeyboardButton("üë®‚Äçüíº –û–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –º–µ–Ω–µ–¥–∂–µ—Ä—É")],
        [KeyboardButton("‚ö†Ô∏è –û—Ç—á–µ—Ç –æ –Ω–∞—Ä—É—à–µ–Ω–∏–∏")],
        [KeyboardButton("üè¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏")],
        [KeyboardButton("üìÖ –ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã"), KeyboardButton("üí∞ –†–∞—Å—á–µ—Ç –ó–ü")]
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = update.effective_user
    save_user(user.id, user.first_name, user.username)
    
    welcome_text = f"""
–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, {user.first_name}! 
–Ø –±–æ—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏. –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç:
    """
    
    await update.message.reply_text(
        welcome_text,
        reply_markup=create_main_menu()
    )

async def handle_main_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    text = update.message.text
    user_id = update.effective_user.id
    save_message(user_id, text, 'user')
    
    if text == "üë®‚Äçüíº –û–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –º–µ–Ω–µ–¥–∂–µ—Ä—É":
        await update.message.reply_text(
            "–û–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É –∏–ª–∏ –≤–æ–ø—Ä–æ—Å. –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.",
            reply_markup=ReplyKeyboardMarkup([[KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞")]], resize_keyboard=True)
        )
        return MANAGER_DIALOG
    
    elif text == "‚ö†Ô∏è –û—Ç—á–µ—Ç –æ –Ω–∞—Ä—É—à–µ–Ω–∏–∏":
        await update.message.reply_text(
            "–û–ø–∏—à–∏—Ç–µ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ:",
            reply_markup=ReplyKeyboardMarkup([[KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞")]], resize_keyboard=True)
        )
        return REPORT_ISSUE
    
    elif text == "üè¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏":
        org_info = """
üè¢ –ù–∞—à–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è:
‚Ä¢ –û—Å–Ω–æ–≤–∞–Ω–∞ –≤ 2010 –≥–æ–¥—É
‚Ä¢ –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: IT —Ä–µ—à–µ–Ω–∏—è
‚Ä¢ –®—Ç–∞—Ç: 50+ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
‚Ä¢ –ö–æ–Ω—Ç–∞–∫—Ç—ã: +7 (XXX) XXX-XX-XX
        """
        await update.message.reply_text(org_info)
    
    elif text == "üìÖ –ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã":
        schedule = """
üïí –ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:
–ü–Ω-–ü—Ç: 9:00 - 18:00
–°–±: 10:00 - 15:00
–í—Å: –≤—ã—Ö–æ–¥–Ω–æ–π
–û–±–µ–¥: 13:00 - 14:00
        """
        await update.message.reply_text(schedule)
    
    elif text == "üí∞ –†–∞—Å—á–µ—Ç –ó–ü":
        salary_info = """
üí∞ –†–∞—Å—á–µ—Ç –∑–∞—Ä–∞–±–æ—Ç–Ω–æ–π –ø–ª–∞—Ç—ã:
‚Ä¢ –û–∫–ª–∞–¥: —Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏
‚Ä¢ –ü—Ä–µ–º–∏–∏: –∑–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ KPI
‚Ä¢ –ù–∞–¥–±–∞–≤–∫–∏: –∑–∞ —Å—Ç–∞–∂ –∏ –ø—Ä–æ–µ–∫—Ç—ã
‚Ä¢ –ê–≤–∞–Ω—Å: 40% 15-–≥–æ —á–∏—Å–ª–∞
‚Ä¢ –û—Å–Ω–æ–≤–Ω–∞—è –≤—ã–ø–ª–∞—Ç–∞: 5-–≥–æ —á–∏—Å–ª–∞
        """
        await update.message.reply_text(salary_info)
    
    return ConversationHandler.END

async def handle_manager_dialog(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∏–∞–ª–æ–≥–∞ —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º"""
    if update.message.text == "‚ùå –û—Ç–º–µ–Ω–∞":
        await update.message.reply_text("–î–∏–∞–ª–æ–≥ –æ—Ç–º–µ–Ω–µ–Ω", reply_markup=create_main_menu())
        return ConversationHandler.END
    
    user_id = update.effective_user.id
    message_text = update.message.text
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—Ä–∞—â–µ–Ω–∏–µ –≤ –±–∞–∑—É
    ticket_id = create_support_ticket(user_id, message_text, 'manager_request')
    
    await update.message.reply_text(
        f"‚úÖ –í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ #{ticket_id} –ø—Ä–∏–Ω—è—Ç–æ! –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç.",
        reply_markup=create_main_menu()
    )
    
    return ConversationHandler.END

async def handle_report_issue(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç—á–µ—Ç–∞ –æ –Ω–∞—Ä—É—à–µ–Ω–∏–∏"""
    if update.message.text == "‚ùå –û—Ç–º–µ–Ω–∞":
        await update.message.reply_text("–°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ", reply_markup=create_main_menu())
        return ConversationHandler.END
    
    user_id = update.effective_user.id
    
    if update.message.photo or update.message.document or update.message.video:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–µ–¥–∏–∞-—Ñ–∞–π–ª–æ–≤
        media_info = "–ú–µ–¥–∏–∞—Ñ–∞–π–ª –ø–æ–ª—É—á–µ–Ω"
        if update.message.caption:
            media_info += f" —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º: {update.message.caption}"
        
        ticket_id = create_support_ticket(user_id, media_info, 'violation_report')
        
        await update.message.reply_text(
            f"‚úÖ –û—Ç—á–µ—Ç –æ –Ω–∞—Ä—É—à–µ–Ω–∏–∏ #{ticket_id} —Å–æ–∑–¥–∞–Ω! –°–ø–∞—Å–∏–±–æ –∑–∞ –±–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å.",
            reply_markup=create_main_menu()
        )
        return ConversationHandler.END
    
    elif update.message.text:
        ticket_id = create_support_ticket(user_id, update.message.text, 'violation_report')
        
        await update.message.reply_text(
            f"‚úÖ –û—Ç—á–µ—Ç –æ –Ω–∞—Ä—É—à–µ–Ω–∏–∏ #{ticket_id} —Å–æ–∑–¥–∞–Ω! –•–æ—Ç–∏—Ç–µ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ?",
            reply_markup=ReplyKeyboardMarkup([
                [KeyboardButton("‚úÖ –î–∞, –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å"), KeyboardButton("‚ùå –ù–µ—Ç, –∑–∞–≤–µ—Ä—à–∏—Ç—å")]
            ], resize_keyboard=True)
        )
        return WAITING_MEDIA
    
    return REPORT_ISSUE

async def handle_media_attachment(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏—è –º–µ–¥–∏–∞"""
    if update.message.text == "‚ùå –ù–µ—Ç, –∑–∞–≤–µ—Ä—à–∏—Ç—å":
        await update.message.reply_text("–û—Ç—á–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω", reply_markup=create_main_menu())
        return ConversationHandler.END
    
    await update.message.reply_text(
        "–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ –Ω–∞—Ä—É—à–µ–Ω–∏—è:",
        reply_markup=ReplyKeyboardMarkup([[KeyboardButton("‚ùå –ó–∞–≤–µ—Ä—à–∏—Ç—å –±–µ–∑ –º–µ–¥–∏–∞")]], resize_keyboard=True)
    )
    return REPORT_ISSUE

async def cancel_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã"""
    await update.message.reply_text("–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ", reply_markup=create_main_menu())
    return ConversationHandler.END

def register_handlers(application):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤"""
    
    # ConversationHandler –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
    conv_handler = ConversationHandler(
        entry_points=[MessageHandler(filters.TEXT & ~filters.COMMAND, handle_main_menu)],
        states={
            MANAGER_DIALOG: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, handle_manager_dialog)
            ],
            REPORT_ISSUE: [
                MessageHandler(filters.TEXT | filters.PHOTO | filters.VIDEO | filters.Document.ALL, handle_report_issue)
            ],
            WAITING_MEDIA: [
                MessageHandler(filters.TEXT, handle_media_attachment)
            ]
        },
        fallbacks=[CommandHandler('cancel', cancel_handler)]
    )
    
    # –ë–∞–∑–æ–≤—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start_command))
    application.add_handler(conv_handler)
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ª—é–±—ã—Ö –¥—Ä—É–≥–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_main_menu))
